// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role{
  student
  teacher
}

model User{
  id String @id @default(cuid())
  name String
  password String
  role Role
  email String @unique
  img String @default("https://img.freepik.com/free-icon/user_318-790139.jpg?w=2000")
  sessions Session[]
  classroom Classroom[] @relation("Classroom")
  enrolledIn Classroom[] @relation("EnrolledIn")
  submissions Submission[]
  announcements Announcement[]
}

model Session{
  id String @id @default(cuid())
  user User @relation(fields: [userId],references: [id])
  userId String
  valid Boolean @default(true)
}

model Classroom{
  id String @id @default(cuid())
  title String
  description String @default("No Description Provided")
  img String @default("https://thumbs.dreamstime.com/b/elementary-school-classroom-27014997.jpg")
  teacherId String
  teacher User @relation(name: "Classroom",fields: [teacherId],references: [id])
  student User[] @relation(name:"EnrolledIn")
  date DateTime @default(now())
  assignments Assignment[]
  announcements Announcement[]
}

model Attachment{
  id String @id @default(cuid())
  filename String
  assignment Assignment @relation(fields: [assignmentId], references: [id], onDelete: Cascade)
  assignmentId String
  type String
  size Int

}

model Submission{
  id String @id @default(cuid())
  filename String
  type String
  size Int
  assignment Assignment @relation(fields: [assignmentId], references: [id],onDelete: Cascade)
  assignmentId String
  studentId String 
  student User @relation(fields: [studentId],references: [id],onDelete: Cascade) 
  grade Float?
}


model Assignment{
  id String @id @default(cuid())
  name String
  description String? @default("No Description")
  dueDate String
  attachments Attachment[]
  submissions Submission[]
  classroom Classroom @relation(fields: [classroomId], references: [id], onDelete: Cascade)
  classroomId String
}

model Announcement{
  id String @id @default(cuid())
  title String
  description String
  date DateTime @default(now())
  classroom Classroom @relation(fields: [classroomId],references: [id],onDelete: Cascade)
  classroomId String
  viewedUsers User[] 
}